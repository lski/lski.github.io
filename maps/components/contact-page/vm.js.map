{"version":3,"sources":["components/contact-page/vm.js"],"names":["factory","define","template","ko","mapping","ctx","modal","_","globals","ViewModel","params","this","email","emailLink","contact","ContactModel","self","Email","observable","Name","Subject","Message","running","Topic","computed","read","write","prototype","submit","form","checkValidity","args","toJS","contacts","sendmessage","then","show","querySelectorAll","each","input","value","viewModel"],"mappings":"AAAA,cAEA,SAAWA,GAIe,kBAAXC,SAAyBA,OAAY,KAC5CA,QAAQ,mBAAoB,WAAY,mBAAoB,2BAA4B,oBAAqB,aAAc,WAAYD,IAE5I,SAAUE,EAAUC,EAAIC,EAASC,EAAKC,EAAOC,EAAGC,GAE/C,QAASC,GAAUC,GAEfC,KAAKC,MAAQJ,EAAQI,MACrBD,KAAKE,UAAY,UAAYF,KAAKC,MAElCD,KAAKG,QAAU,GAAIC,GAGvB,QAASA,KAEL,GAAIC,GAAOL,IAEXK,GAAKC,MAAQd,EAAGe,aAChBF,EAAKG,KAAOhB,EAAGe,aACfF,EAAKI,QAAUjB,EAAGe,aAClBF,EAAKK,QAAUlB,EAAGe,aAElBF,EAAKM,QAAUnB,EAAGe,aAElBF,EAAKO,MAAQpB,EAAGqB,UACZC,KAAMT,EAAKI,QACXM,MAAOV,EAAKI,UAoCpB,MAhCAL,GAAaY,WACTC,OAAQ,SAAgBC,GAGpB,IAAIA,EAAKC,eAAiBD,EAAKC,mBAAoB,EAAnD,CAIA,GAAId,GAAOL,KACPoB,EAAO3B,EAAQ4B,KAAKhB,EAExBA,GAAKM,SAAQ,GAEbjB,EAAI4B,SAASC,YAAYH,GAAMI,KAAK,WAEhC7B,EAAM8B,KAAK,YAEX7B,EAAEsB,EAAKQ,iBAAiB,oBAAoBC,KAAK,SAAUC,GAEvDA,EAAMC,MAAQ,KAGlBxB,EAAKM,SAAQ,KACd,SAAS,WAERhB,EAAM8B,KAAK,SAEXpB,EAAKM,SAAQ,SAMrBmB,UAAWhC,EACXP,SAAUA","file":"components/contact-page/vm.js","sourcesContent":["'use strict';\n\n(function (factory) {\n\n    \"use strict\";\n\n    if (typeof define === 'function' && define['amd']) {\n        define(['text!./view.html', 'knockout', 'knockout-mapping', 'app/data-context-contact', 'vendor/lski-modal', 'underscore', 'globals'], factory);\n    }\n})(function (template, ko, mapping, ctx, modal, _, globals) {\n\n    function ViewModel(params) {\n\n        this.email = globals.email;\n        this.emailLink = 'mailto:' + this.email;\n\n        this.contact = new ContactModel();\n    }\n\n    function ContactModel() {\n\n        var self = this;\n\n        self.Email = ko.observable();\n        self.Name = ko.observable();\n        self.Subject = ko.observable();\n        self.Message = ko.observable();\n\n        self.running = ko.observable();\n\n        self.Topic = ko.computed({\n            read: self.Subject,\n            write: self.Subject\n        });\n    };\n\n    ContactModel.prototype = {\n        submit: function submit(form) {\n\n            // If this form id not filled correctly then prevent it from sending to the server\n            if (form.checkValidity && form.checkValidity() === false) {\n                return;\n            }\n\n            var self = this,\n                args = mapping.toJS(self);\n\n            self.running(true);\n\n            ctx.contacts.sendmessage(args).then(function () {\n\n                modal.show('#success');\n                // Now clear form\n                _(form.querySelectorAll('input, textarea')).each(function (input) {\n\n                    input.value = \"\";\n                });\n\n                self.running(false);\n            })['catch'](function () {\n\n                modal.show('#fail');\n\n                self.running(false);\n            });\n        }\n    };\n\n    return {\n        viewModel: ViewModel,\n        template: template\n    };\n});"],"sourceRoot":"/source/"}