{"version":3,"sources":["components/contact-page/vm.js"],"names":["define","template","ko","mapping","ctx","modal","_","config","ViewModel","this","email","contact","emailLink","ContactModel","self","Email","observable","Name","Subject","Message","running","Topic","computed","read","write","prototype","submit","form","checkValidity","args","toJS","contacts","sendmessage","then","show","querySelectorAll","each","input","value","viewModel"],"mappings":"AAAA,YAEAA,SAAQ,mBAAoB,WAAY,mBAAoB,2BAA4B,oBAAqB,aAAc,cAAe,SAAUC,EAAUC,EAAIC,EAASC,EAAKC,EAAOC,EAAGC,GAEtL,QAASC,KAELC,KAAKC,MAAQH,EAAOI,QACpBF,KAAKG,UAAY,UAAYH,KAAKC,MAElCD,KAAKE,QAAU,GAAIE,GAGvB,QAASA,KAEL,GAAIC,GAAOL,IAEXK,GAAKC,MAAQb,EAAGc,aAChBF,EAAKG,KAAOf,EAAGc,aACfF,EAAKI,QAAUhB,EAAGc,aAClBF,EAAKK,QAAUjB,EAAGc,aAElBF,EAAKM,QAAUlB,EAAGc,aAElBF,EAAKO,MAAQnB,EAAGoB,UACZC,KAAMT,EAAKI,QACXM,MAAOV,EAAKI,UAoCpB,MAhCAL,GAAaY,WACTC,OAAQ,SAAgBC,GAGpB,IAAIA,EAAKC,eAAiBD,EAAKC,mBAAoB,EAAnD,CAIA,GAAId,GAAOL,KACPoB,EAAO1B,EAAQ2B,KAAKhB,EAExBA,GAAKM,SAAQ,GAEbhB,EAAI2B,SAASC,YAAYH,GAAMI,KAAK,WAEhC5B,EAAM6B,KAAK,YAEX5B,EAAEqB,EAAKQ,iBAAiB,oBAAoBC,KAAK,SAAUC,GAEvDA,EAAMC,MAAQ,KAGlBxB,EAAKM,SAAQ,KACd,SAAS,WAERf,EAAM6B,KAAK,SAEXpB,EAAKM,SAAQ,SAMrBmB,UAAW/B,EACXP,SAAUA","file":"../../../components/contact-page/vm.js","sourcesContent":["'use strict';\n\ndefine(['text!./view.html', 'knockout', 'knockout-mapping', 'app/data-context-contact', 'vendor/lski-modal', 'underscore', 'app/config'], function (template, ko, mapping, ctx, modal, _, config) {\n\n    function ViewModel() {\n\n        this.email = config.contact;\n        this.emailLink = 'mailto:' + this.email;\n\n        this.contact = new ContactModel();\n    }\n\n    function ContactModel() {\n\n        var self = this;\n\n        self.Email = ko.observable();\n        self.Name = ko.observable();\n        self.Subject = ko.observable();\n        self.Message = ko.observable();\n\n        self.running = ko.observable();\n\n        self.Topic = ko.computed({\n            read: self.Subject,\n            write: self.Subject\n        });\n    }\n\n    ContactModel.prototype = {\n        submit: function submit(form) {\n\n            // If this form id not filled correctly then prevent it from sending to the server\n            if (form.checkValidity && form.checkValidity() === false) {\n                return;\n            }\n\n            var self = this,\n                args = mapping.toJS(self);\n\n            self.running(true);\n\n            ctx.contacts.sendmessage(args).then(function () {\n\n                modal.show('#success');\n                // Now clear form\n                _(form.querySelectorAll('input, textarea')).each(function (input) {\n\n                    input.value = \"\";\n                });\n\n                self.running(false);\n            })['catch'](function () {\n\n                modal.show('#fail');\n\n                self.running(false);\n            });\n        }\n    };\n\n    return {\n        viewModel: ViewModel,\n        template: template\n    };\n});"]}