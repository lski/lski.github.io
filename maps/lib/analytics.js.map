{"version":3,"sources":["lib/analytics.js"],"names":["factory","define","root","appInsights","Error","pageView","page","trackPageView","event","name","trackEvent","apply","Array","prototype","slice","call","arguments","loggedIn","userId","setAuthenticatedUserContext"],"mappings":"AAAA,cAEA,SAAWA,GAGe,kBAAXC,SAAyBA,OAAY,KAC5CA,QAAQ,QAASD,IAEtB,SAAUE,GAET,IAAKA,EAAKC,YACN,KAAM,IAAIC,OAAM,kDAGpB,QAIIC,SAAU,SAAkBC,GACxBJ,EAAKC,YAAYI,cAAcD,IAKnCE,MAAO,SAAeC,GAElBP,EAAKC,YAAYO,WAAWC,MAAMT,EAAKC,YAAaS,MAAMC,UAAUC,MAAMC,KAAKC,aAEnFC,SAAU,SAAkBC,GAExBhB,EAAKC,YAAYgB,4BAA4BD","file":"lib/analytics.js","sourcesContent":["'use strict';\n\n(function (factory) {\n    \"use strict\";\n\n    if (typeof define === 'function' && define['amd']) {\n        define(['root'], factory);\n    }\n})(function (root) {\n\n    if (!root.appInsights) {\n        throw new Error(\"AppInsights needs to be set up to use analytics\");\n    }\n\n    return {\n        /**\r\n         * Records the page change\r\n         */\n        pageView: function pageView(page) {\n            root.appInsights.trackPageView(page);\n        },\n        /**\r\n         * Send events information, the first param is the name of the event, all subsequate params are the data to attach along with an event. It can be of any type string or object etc.\r\n         */\n        event: function event(name) {\n\n            root.appInsights.trackEvent.apply(root.appInsights, Array.prototype.slice.call(arguments));\n        },\n        loggedIn: function loggedIn(userId) {\n\n            root.appInsights.setAuthenticatedUserContext(userId);\n        }\n    };\n});"],"sourceRoot":"/source/"}