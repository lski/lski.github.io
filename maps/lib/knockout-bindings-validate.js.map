{"version":3,"sources":["lib/knockout-bindings-validate.js"],"names":["factory","define","ko","$","bindingHandlers","validate","init","form","valueAccessor","allBindingsAccessor","$form","unwrap","options","extend","debug","success","label","input","closest","removeClass","addClass","errorPlacement","error","element","attr","text","validateOptions","resetValidation","this","resetForm","valid","data"],"mappings":"AAAA,cAEA,SAAWA,IAIY,kBAAXC,SAAyBA,OAAY,MAC/CA,QAAQ,WAAY,SAAU,mBAAoBD,IAEjD,SAAUE,EAAIC,GA8ChB,MAnCAD,GAAGE,gBAAgBC,UAClBC,KAAM,SAAcC,EAAMC,EAAeC,GAExC,GAAIC,GAAQP,EAAEI,GACVF,EAAWH,EAAGS,OAAOH,IAEzB,IAAIH,EAAU,CAEb,GAAIO,GAAUT,EAAEU,WACfC,OAAO,EACPC,QAAS,SAAiBC,EAAOC,GAEhCd,EAAEc,GAAOC,QAAQ,eAAeC,YAAY,cAAcC,SAAS,aAEpEC,eAAgB,SAAwBC,EAAOC,GAE9CA,EAAQC,KAAK,QAASF,EAAMG,QAC5BF,EAAQL,QAAQ,eAAeC,YAAY,YAAYC,SAAS,gBAE/DX,IAAsBiB,gBAGzBhB,GAAML,SAASO,GAEde,gBAAkB,WAKlB,MAHAC,MAAKC,YAGED,UAOVE,MAAO,SAAeC,EAAMxB,GAI3B,MAFAA,GAAOJ,EAAEI,KAELA,EAAKuB","file":"lib/knockout-bindings-validate.js","sourcesContent":["'use strict';\n\n(function (factory) {\n\n\t\"use strict\";\n\n\tif (typeof define === 'function' || define['amd']) {\n\t\tdefine(['knockout', 'jquery', 'jquery-validate'], factory);\n\t}\n})(function (ko, $) {\n\n\t\"use strict\";\n\n\t/**\r\n     * Adds validation to a form element, which validates the values in each of the form's inputs. Uses jquery validation to validate and bootstrap popovers to show messages\r\n     * To provide validatation use standard html5 attributes, but be aware jquery validation requires each input to have a name attribute associated with it, so either add one\r\n     * manually, or use the uniqueName binding\r\n     * @requires jquery.validation\r\n     */\n\n\tko.bindingHandlers.validate = {\n\t\tinit: function init(form, valueAccessor, allBindingsAccessor) {\n\n\t\t\tvar $form = $(form);\n\t\t\tvar validate = ko.unwrap(valueAccessor());\n\n\t\t\tif (validate) {\n\t\t\t\t// Do these individually as the validator will not add the options to each form\n\t\t\t\tvar options = $.extend({}, {\n\t\t\t\t\tdebug: true,\n\t\t\t\t\tsuccess: function success(label, input) {\n\n\t\t\t\t\t\t$(input).closest('.form-group').removeClass('is-invalid').addClass('is-valid');\n\t\t\t\t\t},\n\t\t\t\t\terrorPlacement: function errorPlacement(error, element) {\n\n\t\t\t\t\t\telement.attr('title', error.text());\n\t\t\t\t\t\telement.closest('.form-group').removeClass('is-valid').addClass('is-invalid');\n\t\t\t\t\t}\n\t\t\t\t}, allBindingsAccessor().validateOptions);\n\n\t\t\t\t// Add the validation\n\t\t\t\t$form.validate(options)\n\t\t\t\t// add a new function to the validator object for clearing the popups\n\t\t\t\t.resetValidation = function () {\n\n\t\t\t\t\tthis.resetForm();\n\n\t\t\t\t\t// Return the validator\n\t\t\t\t\treturn this;\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t};\n\n\treturn {\n\t\tvalid: function valid(data, form) {\n\n\t\t\tform = $(form);\n\n\t\t\tif (form.valid()) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t};\n});"],"sourceRoot":"/source/"}