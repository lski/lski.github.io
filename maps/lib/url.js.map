{"version":3,"sources":["lib/url.js"],"names":["factory","define","r","m","config","root","setRoot","path","consts","parseRoot","url","result","test","substr","length","api","resolve","join","Array","prototype","call","arguments","resolveApi","reload","location","this","current","load","assign","pathname","search","hash","addParam","name","value","begin","pos","indexOf","substring","encodeURIComponent","params","results","plusReplaceRegEx","decodeFunc","s","decodeURIComponent","replace","queryString","window","urlParams","exec"],"mappings":"AAAA,cAEA,SAAWA,GAIY,kBAAXC,SAAyBA,OAAY,KAE/CA,QAAQ,OAAQ,UAAW,SAAUC,EAAGC,GACvC,MAAOH,GAAQE,EAAGC,EAAEC,aAGpB,SAAUC,EAAMD,GA0FlB,QAASE,GAAQC,GAEhBC,EAAOH,KAAOI,EAAUF,GAGzB,QAASE,GAAUC,GAElB,GAAIC,GAAS,IAMb,OAJID,KACHC,EAAS,MAAMC,KAAKF,GAAOA,EAAIG,OAAO,EAAGH,EAAII,OAAS,GAAKJ,GAGrDC,EAnGR,GAAIH,IACHH,KAAMI,EAAUL,GAAUA,EAAOC,MAAQ,KACzCU,IAAKN,EAAUL,GAAUA,EAAOW,KAAOV,GAGxC,QAKCW,QAAS,SAAiBN,GAEzB,GAAIO,GAAOC,MAAMC,UAAUF,IAE3B,OAAI,4BAA4BL,KAAKF,GAC7BO,EAAKG,KAAKC,UAAW,IAGtBb,EAAOH,KAAOY,EAAKG,KAAKC,UAAW,KAE3CC,WAAY,WAEX,MAAOd,GAAOO,IAAMG,MAAMC,UAAUF,KAAKG,KAAKC,UAAW,KAK1DE,OAAQ,WACPlB,EAAKmB,SAASD,OAAOE,KAAKC,YAK3BC,KAAM,SAAcjB,GACnBL,EAAKmB,SAASI,OAAOlB,IAKtBL,KAAMC,EAINoB,QAAS,WACR,MAAOrB,GAAKmB,SAASK,SAAWxB,EAAKmB,SAASM,OAASzB,EAAKmB,SAASO,MAEtEC,SAAU,SAAkBzB,EAAM0B,EAAMC,GAEvC,GAEIC,GAFAC,EAAM7B,EAAK8B,QAAQ,KACnBN,EAAO,EAUX,OAPY,KAARK,GACHD,EAAQ5B,EAAK+B,UAAU,EAAGF,GAC1BL,EAAOxB,EAAK+B,UAAUF,IAEtBD,EAAQ5B,GAGD4B,EAA8B,KAAvBA,EAAME,QAAQ,KAAc,IAAM,IAAKE,mBAAmBN,GAAO,IAAKM,mBAAmBL,GAAS,IAAKH,GAAMd,KAAK,KAMlIuB,OAAQ,WAaP,IAXA,GAAIC,GAEJC,EAAmB,MAEnBxC,EAAI,qBACAyC,EAAa,SAAoBC,GACpC,MAAOC,oBAAmBD,EAAEE,QAAQJ,EAAkB,OAEnDK,EAAcC,OAAOxB,SAASM,OAAOQ,UAAU,GAC/CW,KAEGR,EAAUvC,EAAEgD,KAAKH,IACvBE,EAAUN,EAAWF,EAAQ,KAAOE,EAAWF,EAAQ,GAGxD,OAAOQ","file":"lib/url.js","sourcesContent":["'use strict';\n\n(function (factory) {\n\n\t\"use strict\";\n\n\tif (typeof define === 'function' && define['amd']) {\n\n\t\tdefine(['root', 'module'], function (r, m) {\n\t\t\treturn factory(r, m.config());\n\t\t});\n\t}\n})(function (root, config) {\n\n\t\"use strict\";\n\n\tvar consts = {\n\t\troot: parseRoot(config && config.root || '/'),\n\t\tapi: parseRoot(config && config.api || root)\n\t};\n\n\treturn {\n\t\t/**\r\n   * Performs the same as Url.Content in Razor pages, by resolving the passed url to the app root. \r\n   * If more than one argument is passed, then they are also concatenated together with a forward slash\r\n   */\n\t\tresolve: function resolve(url) {\n\n\t\t\tvar join = Array.prototype.join;\n\n\t\t\tif (/http:\\/\\/|https:\\/\\/|\\/\\//.test(url)) {\n\t\t\t\treturn join.call(arguments, '');\n\t\t\t}\n\n\t\t\treturn consts.root + join.call(arguments, '');\n\t\t},\n\t\tresolveApi: function resolveApi() {\n\n\t\t\treturn consts.api + Array.prototype.join.call(arguments, '');\n\t\t},\n\t\t/**\r\n   * Reloads the current page\r\n   */\n\t\treload: function reload() {\n\t\t\troot.location.reload(this.current());\n\t\t},\n\t\t/**\r\n   * Loads a new page\r\n   */\n\t\tload: function load(url) {\n\t\t\troot.location.assign(url);\n\t\t},\n\t\t/**\r\n   * Sets the application root, useful if applied to a subfolder location\r\n   */\n\t\troot: setRoot,\n\t\t/**\r\n   * Returns the current application path and hash\r\n   */\n\t\tcurrent: function current() {\n\t\t\treturn root.location.pathname + root.location.search + root.location.hash;\n\t\t},\n\t\taddParam: function addParam(path, name, value) {\n\n\t\t\tvar pos = path.indexOf('#'),\n\t\t\t    hash = '',\n\t\t\t    begin;\n\n\t\t\tif (pos !== -1) {\n\t\t\t\tbegin = path.substring(0, pos);\n\t\t\t\thash = path.substring(pos);\n\t\t\t} else {\n\t\t\t\tbegin = path;\n\t\t\t}\n\n\t\t\treturn [begin, begin.indexOf('?') === -1 ? '?' : '&', encodeURIComponent(name), '=', encodeURIComponent(value || ''), hash].join('');\n\t\t},\n\t\t/**\r\n   * Calculates and returns the parameters supplied to the webpage via the query string and populates an object with each of the property names\r\n   * corresponding to a key from querystring (adapted from code found on StackOverflow, ref not known)\r\n   */\n\t\tparams: function params() {\n\n\t\t\tvar results,\n\t\t\t    // The results, with name = results[1] and value = results[2]\n\t\t\tplusReplaceRegEx = /\\+/g,\n\t\t\t    // Regex for replacing addition symbol with a space\n\t\t\tr = /([^&=]+)=?([^&]*)/g,\n\t\t\t    decodeFunc = function decodeFunc(s) {\n\t\t\t\treturn decodeURIComponent(s.replace(plusReplaceRegEx, \" \"));\n\t\t\t},\n\t\t\t    queryString = window.location.search.substring(1),\n\t\t\t    urlParams = {};\n\n\t\t\twhile (results = r.exec(queryString)) {\n\t\t\t\turlParams[decodeFunc(results[1])] = decodeFunc(results[2]);\n\t\t\t}\n\n\t\t\treturn urlParams;\n\t\t}\n\t};\n\n\tfunction setRoot(path) {\n\n\t\tconsts.root = parseRoot(path);\n\t}\n\n\tfunction parseRoot(url) {\n\n\t\tvar result = null;\n\n\t\tif (url) {\n\t\t\tresult = /\\/$/.test(url) ? url.substr(0, url.length - 1) : url;\n\t\t}\n\n\t\treturn result;\n\t}\n});"],"sourceRoot":"/source/"}