{"version":3,"sources":["lib/request.js"],"names":["define","request","auth","alerts","origSend","send","utils","merge","options","rejectOnStatusCode","dataOnly","headers","Authorization","token","error","err","status","warning","setTimeout","loginRedirect","JSON","parse","response","responseText","message","e","p","apply","this","arguments"],"mappings":"AAAA,YAEAA,SAAQ,sBAAuB,WAAY,cAAe,SAAUC,EAASC,EAAMC,GAM/E,GAAIC,GAAWH,EAAQI,IAEvB,OAAOJ,GAAQK,MAAMC,MAAMN,GACvBO,SACIC,oBAAoB,EACpBC,UAAU,EACVC,SACIC,cAAiB,WACb,GAAIC,GAAQX,EAAKW,OACjB,IAAc,OAAVA,EACA,MAAO,UAAYA,IAK/BC,MAAO,SAAeC,GAElB,GAAmB,MAAfA,EAAIC,OACJb,EAAOc,QAAQ,kEACfC,WAAWhB,EAAKiB,cAAe,SAE/B,KACIhB,EAAOW,MAAMM,KAAKC,MAAMN,EAAIO,SAASC,cAAcC,SACrD,MAAOC,GACLtB,EAAOW,MAAMC,EAAIS,SAAW,+CAK5CnB,KAAM,WAEF,GAAIqB,GAAItB,EAASuB,MAAMC,KAAMC,UAO7B,OAJIA,WAAU,IAAoC,kBAAvBA,WAAU,GAAGf,OACpCY,EAAE,SAASG,UAAU,GAAGf,OAGrBY","file":"../../lib/request.js","sourcesContent":["'use strict';\n\ndefine(['vendor/lski-request', 'lib/auth', 'lib/alerts'], function (request, auth, alerts) {\n\n    \"use strict\";\n\n    // Store a reference to the original method so that it can be used internally of the wrapper\n\n    var origSend = request.send;\n\n    return request.utils.merge(request, {\n        options: {\n            rejectOnStatusCode: true,\n            dataOnly: true,\n            headers: {\n                'Authorization': function Authorization() {\n                    var token = auth.token();\n                    if (token !== null) {\n                        return 'Bearer ' + token;\n                    }\n                }\n            },\n            // Extend the default settings with a default error handler, so it can be overridden in local calls\n            error: function error(err) {\n\n                if (err.status === 401) {\n                    alerts.warning('You are no longer logged in, redirecting you to the login page');\n                    setTimeout(auth.loginRedirect, 1000);\n                } else {\n                    try {\n                        alerts.error(JSON.parse(err.response.responseText).message);\n                    } catch (e) {\n                        alerts.error(err.message || 'Sorry an error occured, please try again');\n                    }\n                }\n            }\n        },\n        send: function send() {\n\n            var p = origSend.apply(this, arguments);\n\n            // If the options.error argument has not been overridden then attach the default error handler\n            if (arguments[3] && typeof arguments[3].error === 'function') {\n                p['catch'](arguments[3].error);\n            }\n\n            return p;\n        }\n    });\n});"]}