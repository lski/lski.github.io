{"version":3,"sources":["lib/auth.js"],"names":["factory","define","s","u","a","m","config","storage","url","analytics","authenticated","token","store","consts","user","extendUser","login","accessToken","profile","expires","loggedIn","Id","logout","redirectLogout","load","resolve","urls","redirectLogin","addParam","current","transferRedirect","decodeURIComponent","params","returnUrl","self","isInRole","role","roles","i","j","length","auth","access_token","expires_in","loginRedirect","logoutRedirect"],"mappings":"AAAA,cAEA,SAAWA,GAGY,kBAAXC,SAAyBA,OAAY,KAC/CA,QAAQ,sBAAuB,UAAW,gBAAiB,UAAW,SAAUC,EAAGC,EAAGC,EAAGC,GACxF,MAAOL,GAAQE,EAAGC,EAAGC,EAAGC,EAAEC,aAG1B,SAAUC,EAASC,EAAKC,EAAWH,GAiCrC,QAASI,KACR,QAASC,IAMV,QAASA,KACR,MAAOJ,GAAQK,MAAMC,EAAOF,OAM7B,QAASG,KACR,MAAOC,GAAWR,EAAQK,MAAMC,EAAOC,OAGxC,QAASE,GAAMC,EAAaC,EAASC,GAEpCV,EAAUW,SAASF,EAAQG,IAE3Bd,EAAQK,MAAMC,EAAOC,KAAMI,GAAWC,QAASA,IAC/CZ,EAAQK,MAAMC,EAAOF,MAAOM,GAAeE,QAASA,IAMrD,QAASG,KAERf,EAAQK,MAAMC,EAAOC,KAAM,MAC3BP,EAAQK,MAAMC,EAAOF,MAAO,MAM7B,QAASY,KAERf,EAAIgB,KAAKhB,EAAIiB,QAAQZ,EAAOa,KAAKJ,SAMlC,QAASK,KAGJjB,IACHF,EAAIgB,KAAKhB,EAAIiB,QAAQZ,EAAOa,KAAKV,QAEjCR,EAAIgB,KAAKhB,EAAIiB,QAAQjB,EAAIoB,SAASf,EAAOa,KAAKV,MAAO,YAAaR,EAAIqB,aAOxE,QAASC,KAERtB,EAAIgB,KAAKO,mBAAmBvB,EAAIwB,SAASC,WAAa,MAMvD,QAASlB,GAAWZ,GAEnB,GAAI+B,GAAO/B,KAeX,OAbA+B,GAAKC,SAAW,SAAUC,GAIzB,IAAK,GAFDC,GAAQH,EAAKG,MAAQH,EAAKG,UAErBC,EAAI,EAAGC,EAAIF,EAAMG,OAAYD,EAAJD,EAAOA,IACxC,GAAID,EAAMC,KAAOF,EAChB,OAAO,CAIT,QAAO,GAGDF,EAlHR,GAAIrB,IACHF,MAAO,QACPG,KAAM,OACNY,KAAMpB,GAAUA,EAAOoB,OACtBJ,OAAQ,UACRN,MAAO,UAKLV,IAAUA,EAAOmC,MAAQnC,EAAOmC,KAAKC,cACxC/B,EAAML,EAAOmC,KAAKC,aAAcpC,EAAOmC,KAAKE,WAG7C,IAAIF,IACH/B,cAAeA,EACfM,MAAOA,EACPM,OAAQA,EACRX,MAAOA,EACPG,KAAMA,EACN8B,cAAejB,EACfkB,eAAgBtB,EAChBO,iBAAkBA,EAGnB,OAAOW","file":"lib/auth.js","sourcesContent":["'use strict';\n\n(function (factory) {\n\t\"use strict\";\n\n\tif (typeof define === 'function' && define['amd']) {\n\t\tdefine(['vendor/lski-storage', 'lib/url', 'lib/analytics', 'module'], function (s, u, a, m) {\n\t\t\treturn factory(s, u, a, m.config());\n\t\t});\n\t}\n})(function (storage, url, analytics, config) {\n\t\"use strict\";\n\n\tvar consts = {\n\t\ttoken: 'token',\n\t\tuser: 'user',\n\t\turls: config && config.urls || {\n\t\t\tlogout: '#logout',\n\t\t\tlogin: '#login'\n\t\t}\n\t};\n\n\t// If a token response has already been set in the settings auto set\n\tif (config && config.auth && config.auth.access_token) {\n\t\ttoken(config.auth.access_token, config.auth.expires_in);\n\t}\n\n\tvar auth = {\n\t\tauthenticated: authenticated,\n\t\tlogin: login,\n\t\tlogout: logout,\n\t\ttoken: token,\n\t\tuser: user,\n\t\tloginRedirect: redirectLogin,\n\t\tlogoutRedirect: redirectLogout,\n\t\ttransferRedirect: transferRedirect\n\t};\n\n\treturn auth;\n\n\t/**\r\n  * States whether the user is currently logged in\r\n  */\n\tfunction authenticated() {\n\t\treturn !!token();\n\t}\n\n\t/**\r\n  * Gets the authorisation token\r\n  */\n\tfunction token() {\n\t\treturn storage.store(consts.token);\n\t}\n\n\t/**\r\n  * Gets the current user data\r\n  */\n\tfunction user() {\n\t\treturn extendUser(storage.store(consts.user));\n\t}\n\n\tfunction login(accessToken, profile, expires) {\n\n\t\tanalytics.loggedIn(profile.Id);\n\n\t\tstorage.store(consts.user, profile, { expires: expires });\n\t\tstorage.store(consts.token, accessToken, { expires: expires });\n\t}\n\n\t/**\r\n  * Remove the token and user from storage meaning they are no longer logged in\r\n  */\n\tfunction logout() {\n\n\t\tstorage.store(consts.user, null);\n\t\tstorage.store(consts.token, null);\n\t}\n\n\t/**\r\n * Transfers the user to the log OUT page\r\n */\n\tfunction redirectLogout() {\n\n\t\turl.load(url.resolve(consts.urls.logout));\n\t}\n\n\t/**\r\n * Transfers the user to the log IN page\r\n */\n\tfunction redirectLogin() {\n\n\t\t// If already logged in, then we are redirecting as the user doesnt have access to that\n\t\tif (authenticated()) {\n\t\t\turl.load(url.resolve(consts.urls.login));\n\t\t} else {\n\t\t\turl.load(url.resolve(url.addParam(consts.urls.login, 'returnUrl', url.current())));\n\t\t}\n\t}\n\n\t/**\r\n  * When someone has logged in this successfully redirects the user using the returnUrl in the query string\r\n  */\n\tfunction transferRedirect() {\n\n\t\turl.load(decodeURIComponent(url.params().returnUrl || '#'));\n\t}\n\n\t/**\r\n  * Gives role based functions to the current user, regardless of whether the user is authenticated\r\n  */\n\tfunction extendUser(u) {\n\n\t\tvar self = u || {};\n\n\t\tself.isInRole = function (role) {\n\n\t\t\tvar roles = self.roles = self.roles || [];\n\n\t\t\tfor (var i = 0, j = roles.length; i < j; i++) {\n\t\t\t\tif (roles[i] === role) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\treturn self;\n\t}\n});"],"sourceRoot":"/source/"}