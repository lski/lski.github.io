{"version":3,"sources":["browser/scripts/vm.js"],"names":["$","_","events","message","window","document","undefined","resolveApi","path","_root","deleteFile","_selected","file","confirm","answer","ajax","url","param","type","dataType","done","refreshDirectoryContents","folder","updateFileSelected","_browser","text","addClass","_fireFileSelected","removeClass","_fireFileDeselected","_getElementToFireAgainst","dispatchEvent","CustomEvent","bubbles","cancelable","detail","_fireFileSelectedComplete","frameElement","itemSelected","fileClicked","this","siblings","end","data","fileDoubleClicked","folderDoubleClicked","folders","tree","jstree","selector","deselect_all","select_node","find","parent","attr","createTree","core","toTreeNode","on","treeNodeSelected","e","node","a_attr","stopPropagation","getJSON","response","container","template","each","item","isFile","isImage","icon","link","append","empty","id","name","data-path","data-id","state","opened","children","directories","map","replace","css","background-color","fileupload","add","formData","submit","evt","err","alert","JSON","parse","arguments","xhr","responseText","jQuery","lski","alerts"],"mappings":"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","file":"browser/scripts/vm.js","sourcesContent":["; (function($, _, events, message, window, document, undefined) {\r\n\r\n    var _browser = $('#file-browser')[0],\r\n        _root = ($('[data-application-root]').data('application-root') || '').replace(/^\\//, ''),\r\n        _selected = {\r\n            file: null,\r\n            folder: null\r\n        };\r\n\r\n    events.on(_browser, 'click', '.item', itemSelected);\r\n    events.on(_browser, 'click', '.item-file', fileClicked);\r\n    events.on(_browser, 'dblclick', '.item-file', fileDoubleClicked)\r\n    events.on(_browser, 'dblclick', '.item-folder', folderDoubleClicked);\r\n    events.on('.toolbar .delete', 'click', deleteFile);\r\n\r\n    $('.browser-contents', _browser)\r\n        .on('dragenter', function() { $(this).css({ 'background-color': '#efefef' }); })\r\n        .on('dragleave dragend drop', function() { $(this).css({ 'background-color': 'transparent' }); })\r\n\r\n    $('[type=\"file\"]', _browser)\r\n        .fileupload({\r\n            url: resolveApi('/api/browser/upload'),\r\n            add: function(e, data) {\r\n\r\n                // If there is not currently a selected folder then stop\r\n                if (!_selected.folder) {\r\n                    return;\r\n                }\r\n\r\n                // Prior to sending the\r\n                data.formData = { path: _selected.folder };\r\n                data.submit();\r\n            },\r\n            done: function(e, data) {\r\n                refreshDirectoryContents(_selected.folder);\r\n            }\r\n        })\r\n        .on('fileuploadfail', function(evt, err) {\r\n\r\n            try {\r\n                message.alert(JSON.parse(arguments[1].xhr().responseText).message);\r\n            } catch (e) {\r\n                message.alert('There was an error uploading the file');\r\n            }\r\n\r\n        });\r\n\r\n    $.getJSON(resolveApi('/api/browser/folder')).done(createTree);\r\n\r\n    function resolveApi(path) {\r\n        return _root + path;\r\n    }\r\n\r\n    function deleteFile() {\r\n\r\n        if (!_selected.file) {\r\n            return;\r\n        }\r\n\r\n        message.confirm('Are you sure you want to delete this file? \\n\\nIt could be being used on the website or in an email', function(answer) {\r\n\r\n            if (!answer) {\r\n                return;\r\n            }\r\n\r\n            $.ajax({\r\n                url: resolveApi('/api/browser/file?' + $.param({ path: _selected.file }, true)),\r\n                type: 'DELETE',\r\n                dataType: 'json'\r\n            })\r\n                .done(function() {\r\n                    refreshDirectoryContents(_selected.folder);\r\n                });\r\n        });\r\n    }\r\n\r\n    function updateFileSelected(path) {\r\n\r\n        if (!path) {\r\n\r\n            $('.file-selected', _browser).text('');\r\n            $(_browser).removeClass('file-selected');\r\n            _selected.file = null;\r\n\r\n            _fireFileDeselected();\r\n        }\r\n        else {\r\n\r\n            $('.file-selected', _browser).text(path);\r\n            $(_browser).addClass('file-selected');\r\n            _selected.file = path;\r\n\r\n            _fireFileSelected(path);\r\n        }\r\n    }\r\n\r\n\tfunction _fireFileSelected(path) {\r\n\t\t_getElementToFireAgainst().dispatchEvent(new CustomEvent('file-selected', { bubbles: true, cancelable: false, detail: { path: path } }));\r\n\t\t//_getElementToFireAgainst().trigger('file-selected', { path: path });\r\n\t}\r\n\r\n\tfunction _fireFileDeselected() {\r\n\t\t_getElementToFireAgainst().dispatchEvent(new CustomEvent('file-deselected', { bubbles: true, cancelable: false }));\r\n\t\t//_getElementToFireAgainst().trigger('file-deselected');\r\n\t}\r\n\r\n\tfunction _fireFileSelectedComplete(path) {\r\n\t\t_getElementToFireAgainst().dispatchEvent(new CustomEvent('file-selected-complete', { bubbles: true, cancelable: false, detail: { path: path } }));\r\n\t\t//events.trigger(_getElementToFireAgainst(), 'file-selected-complete', { path: path })\r\n        //getElementToFireAgainst().trigger('file-selected-complete', { path: path });\r\n\t}\r\n\r\n\tfunction _getElementToFireAgainst() {\r\n        //return { trigger() { } }; \r\n        //return window.parent.jQuery(window.frameElement);\r\n\t\treturn window.frameElement;\r\n    }\r\n\r\n    function itemSelected() {\r\n\r\n        var fileClicked = $(this);\r\n\r\n        fileClicked\r\n            .siblings()\r\n            .removeClass('selected')\r\n            .end()\r\n            .addClass('selected');\r\n\r\n        updateFileSelected(null);\r\n    }\r\n\r\n    function fileClicked() {\r\n\r\n        var fileClicked = $(this),\r\n            path = fileClicked.data('path');\r\n\r\n        updateFileSelected(path);\r\n    }\r\n\r\n    function fileDoubleClicked() {\r\n\r\n        var fileClicked = $(this),\r\n            path = fileClicked.data('path');\r\n\r\n\t\t_fireFileSelectedComplete(path);\r\n    }\r\n\r\n    function folderDoubleClicked() {\r\n\r\n        var folders = $('.browser-folders'),\r\n            tree = folders.jstree(true),\r\n            path = $(this).data('path'),\r\n            selector = '[data-path=\"' + path + '\"]';\r\n\r\n        tree.deselect_all();\r\n        tree.select_node(folders.find(selector).parent().attr('id'));\r\n    }\r\n\r\n\r\n\r\n    function createTree(data) {\r\n\r\n        var tree = $('.browser-folders').jstree({\r\n            core: {\r\n                data: toTreeNode(data)\r\n            }\r\n        });\r\n\r\n        tree.on('select_node.jstree', treeNodeSelected);\r\n        tree.on(\"ready.jstree\", function() {\r\n            tree.jstree('select_node', '#folder-item-Lw', true)\r\n        });\r\n    }\r\n\r\n    function treeNodeSelected(e, data) {\r\n\r\n        var path = data.node.a_attr['data-path'];\r\n\r\n        _selected.folder = path;\r\n\r\n        refreshDirectoryContents(path);\r\n\r\n        e.stopPropagation();\r\n    }\r\n\r\n    function refreshDirectoryContents(path) {\r\n\r\n        $.getJSON(resolveApi('/api/browser/folder/contents'), { path: path })\r\n            .done(function(response) {\r\n\r\n                var container = $('<div/>'),\r\n                    template = _.template($('#template').text());\r\n\r\n                _(response).each(function(item) {\r\n\r\n                    if (item.isFile && item.isImage) {\r\n                        item.icon = resolveApi(item.link);\r\n                    }\r\n                    else if (item.isFile) {\r\n                        item.icon = ('content/images/blank-file-icon.png');\r\n                    }\r\n                    else {\r\n                        item.icon = ('content/images/folder-icon.png');\r\n                    }\r\n\r\n                    var icon = template(item);\r\n\r\n                    container.append(icon);\r\n                })\r\n\r\n                $('.browser-contents').empty().append(container);\r\n\r\n                updateFileSelected(null);\r\n            });\r\n    }\r\n\r\n\t/**\r\n\t* Takes the DirectoryItem data and converts it into a format used by jsTree, creates the tree re-cursively\r\n\t*/\r\n    function toTreeNode(data) {\r\n\r\n        return {\r\n            id: 'folder-item-' + data.id,\r\n            text: data.name,\r\n            a_attr: {\r\n                'data-path': data.path,\r\n                'data-id': data.id\r\n            },\r\n            state: {\r\n                opened: true\r\n            },\r\n            children: _(data.directories).map(toTreeNode)\r\n        }\r\n    }\r\n\r\n})(jQuery, _, window.lski.events, window.lski.alerts, window, document);\r\n\r\n"],"sourceRoot":"/source/"}