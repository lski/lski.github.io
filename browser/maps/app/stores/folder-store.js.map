{"version":3,"sources":["app/stores/folder-store.js"],"names":["dispatcher","constants","MicroEvent","assign","Object","folderStore","findFolder","folder","id","children","i","length","_folder2","_dispatch","evt","action","FOLDERS_LOADED","set","data","SELECTED_FOLDER_CHANGED","setSelected","_trigger","_events","trigger","CHANGE","_folder","_selectedId","_dispatchToken","register","mixin","dispatchToken","get","getSelected","getSelectedId","getSelectedPath","path","addListener","handler","bind","removeListener","unbind"],"mappings":"AAAA,YAEA,IAAIA,YAAaA,WACbC,UAAYA,UACZC,WAAaA,WACbC,OAASC,OAAOD,OAEhBE,YAAc,WA2CjB,QAASC,GAAWC,EAAQC,GAE3B,GAAID,EAAOC,KAAOA,EACjB,MAAOD,EAGR,IAAIE,GAAWF,EAAOE,QAEtB,IAAIA,EACH,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAASE,OAAQD,IAAK,CAEzC,GAAIE,GAAWN,EAAWG,EAASC,GAAIF,EACvC,IAAII,EACH,MAAOA,IAMX,QAASC,GAAUC,GAElB,OAAQA,EAAIC,QAEX,IAAKd,WAAUe,eACdX,YAAYY,IAAIH,EAAII,KACpB,MAED,KAAKjB,WAAUkB,wBACdd,YAAYe,YAAYN,EAAII,OAQ/B,QAASG,KACRC,EAAQC,QAAQtB,UAAUuB,QA9E3B,GAAIC,GAAU,KACVC,EAAc,KACdJ,KAGJK,EAAiB3B,WAAW4B,SAASf,EAIrC,OAFAX,YAAW2B,MAAMP,IAGhBQ,cAAeH,EACfI,IAAK,WACJ,MAAON,IAERR,IAAK,SAAaV,GACjBkB,EAAUtB,UAAWI,GACrBmB,EAAcnB,EAAOC,GACrBa,KAEDW,YAAa,WACZ,MAAO1B,GAAWmB,EAASC,IAE5BO,cAAe,WACd,MAAOP,IAERQ,gBAAiB,WAChB,GAAI3B,GAASD,EAAWmB,EAASC,EACjC,OAAOnB,IAAUA,EAAO4B,MAEzBf,YAAa,SAAqBZ,GACjCkB,EAAclB,EACda,KAEDe,YAAa,SAAqBC,GACjCf,EAAQgB,KAAKrC,UAAUuB,OAAQa,IAEhCE,eAAgB,SAAwBF,GACvCf,EAAQkB,OAAOvC,UAAUuB,OAAQa","file":"app/stores/folder-store.js","sourcesContent":["\"use strict\";\n\nvar dispatcher = dispatcher;\nvar constants = constants;\nvar MicroEvent = MicroEvent;\nvar assign = Object.assign;\n\nvar folderStore = function () {\n\n\tvar _folder = null,\n\t    _selectedId = null,\n\t    _events = {},\n\n\t// Store a reference of the dispatch token so that if something relies on this they can waitFor it to finish\n\t_dispatchToken = dispatcher.register(_dispatch);\n\n\tMicroEvent.mixin(_events);\n\n\treturn {\n\t\tdispatchToken: _dispatchToken,\n\t\tget: function get() {\n\t\t\treturn _folder;\n\t\t},\n\t\tset: function set(folder) {\n\t\t\t_folder = assign({}, folder);\n\t\t\t_selectedId = folder.id;\n\t\t\t_trigger();\n\t\t},\n\t\tgetSelected: function getSelected() {\n\t\t\treturn findFolder(_folder, _selectedId);\n\t\t},\n\t\tgetSelectedId: function getSelectedId() {\n\t\t\treturn _selectedId;\n\t\t},\n\t\tgetSelectedPath: function getSelectedPath() {\n\t\t\tvar folder = findFolder(_folder, _selectedId);\n\t\t\treturn folder && folder.path;\n\t\t},\n\t\tsetSelected: function setSelected(id) {\n\t\t\t_selectedId = id;\n\t\t\t_trigger();\n\t\t},\n\t\taddListener: function addListener(handler) {\n\t\t\t_events.bind(constants.CHANGE, handler);\n\t\t},\n\t\tremoveListener: function removeListener(handler) {\n\t\t\t_events.unbind(constants.CHANGE, handler);\n\t\t}\n\t};\n\n\tfunction findFolder(folder, id) {\n\n\t\tif (folder.id === id) {\n\t\t\treturn folder;\n\t\t}\n\n\t\tvar children = folder.children;\n\n\t\tif (children) {\n\t\t\tfor (var i = 0; i < children.length; i++) {\n\n\t\t\t\tvar _folder2 = findFolder(children[i], id);\n\t\t\t\tif (_folder2) {\n\t\t\t\t\treturn _folder2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _dispatch(evt) {\n\n\t\tswitch (evt.action) {\n\n\t\t\tcase constants.FOLDERS_LOADED:\n\t\t\t\tfolderStore.set(evt.data);\n\t\t\t\tbreak;\n\n\t\t\tcase constants.SELECTED_FOLDER_CHANGED:\n\t\t\t\tfolderStore.setSelected(evt.data);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t// Nothing\n\t\t}\n\t}\n\n\tfunction _trigger() {\n\t\t_events.trigger(constants.CHANGE);\n\t}\n}();"],"sourceRoot":"/source/"}