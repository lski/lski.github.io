{"version":3,"sources":["app/browser-folder-contents.js"],"names":["React","BrowserFolderContentItem","ctx","BrowserFolderContents","createClass","displayName","propTypes","selectedFolder","PropTypes","string","isRequired","selectedItemId","onSelectedItemChanged","func","onSelectedFolderChanged","requiresUpdate","object","getInitialState","contents","updateContents","_this","this","getFolderContents","then","d","setState","componentDidMount","props","componentWillReceiveProps","newProps","onDrag","refs","wrapper","style","onDragFinished","render","_this2","state","map","c","createElement","key","id","content","className","ref","onDragEnter","onDragLeave","onDragEnd","onDrop"],"mappings":"AAAA,YAEA,IAAIA,OAAQA,MACRC,yBAA2BA,yBAC3BC,IAAMA,IAENC,sBAAwBH,MAAMI,aACjCC,YAAa,wBAEbC,WACCC,eAAgBP,MAAMQ,UAAUC,OAAOC,WACvCC,eAAgBX,MAAMQ,UAAUC,OAChCG,sBAAuBZ,MAAMQ,UAAUK,KAAKH,WAC5CI,wBAAyBd,MAAMQ,UAAUK,KAAKH,WAC9CK,eAAgBf,MAAMQ,UAAUQ,OAAON,YAExCO,gBAAiB,WAChB,OACCC,cAGFC,eAAgB,SAAwBZ,GACvC,GAAIa,GAAQC,IAEZnB,KAAIoB,kBAAkBf,GAAgBgB,KAAK,SAAUC,GACpD,MAAOJ,GAAMK,UAAWP,SAAUM,OAGpCE,kBAAmB,WAClBL,KAAKF,eAAeE,KAAKM,MAAMpB,iBAEhCqB,0BAA2B,SAAmCC,GAEzDA,EAAStB,iBAAmBc,KAAKM,MAAMpB,gBAAkBsB,EAASd,iBAAmBM,KAAKM,MAAMZ,gBACnGM,KAAKF,eAAeU,EAAStB,iBAG/BuB,OAAQ,WACPT,KAAKU,KAAKC,QAAQC,MAAuB,gBAAI,WAE9CC,eAAgB,WACfb,KAAKU,KAAKC,QAAQC,MAAuB,gBAAI,eAE9CE,OAAQ,WACP,GAAIC,GAASf,KAETH,EAAWG,KAAKgB,MAAMnB,SAASoB,IAAI,SAAUC,GAChD,MAAOvC,OAAMwC,cAAcvC,0BAA4BwC,IAAKF,EAAEG,GAC7DC,QAASJ,EACT5B,eAAgByB,EAAOT,MAAMhB,eAC7BC,sBAAuBwB,EAAOT,MAAMf,sBACpCE,wBAAyBsB,EAAOT,MAAMb,2BAGxC,OAAOd,OAAMwC,cACZ,OACEI,UAAW,mBACZC,IAAK,UACLC,YAAazB,KAAKS,OAClBiB,YAAa1B,KAAKa,eAClBc,UAAW3B,KAAKa,eAChBe,OAAQ5B,KAAKa,gBACdhB","file":"app/browser-folder-contents.js","sourcesContent":["\"use strict\";\n\nvar React = React,\n    BrowserFolderContentItem = BrowserFolderContentItem,\n    ctx = ctx;\n\nvar BrowserFolderContents = React.createClass({\n\tdisplayName: 'BrowserFolderContents',\n\n\tpropTypes: {\n\t\tselectedFolder: React.PropTypes.string.isRequired,\n\t\tselectedItemId: React.PropTypes.string,\n\t\tonSelectedItemChanged: React.PropTypes.func.isRequired,\n\t\tonSelectedFolderChanged: React.PropTypes.func.isRequired,\n\t\trequiresUpdate: React.PropTypes.object.isRequired\n\t},\n\tgetInitialState: function getInitialState() {\n\t\treturn {\n\t\t\tcontents: []\n\t\t};\n\t},\n\tupdateContents: function updateContents(selectedFolder) {\n\t\tvar _this = this;\n\n\t\tctx.getFolderContents(selectedFolder).then(function (d) {\n\t\t\treturn _this.setState({ contents: d });\n\t\t});\n\t},\n\tcomponentDidMount: function componentDidMount() {\n\t\tthis.updateContents(this.props.selectedFolder);\n\t},\n\tcomponentWillReceiveProps: function componentWillReceiveProps(newProps) {\n\t\t// To ensure we only update when we need too and avoid constantly reloading\n\t\tif (newProps.selectedFolder !== this.props.selectedFolder || newProps.requiresUpdate !== this.props.requiresUpdate) {\n\t\t\tthis.updateContents(newProps.selectedFolder);\n\t\t}\n\t},\n\tonDrag: function onDrag() {\n\t\tthis.refs.wrapper.style['backgroundColor'] = '#efefef';\n\t},\n\tonDragFinished: function onDragFinished() {\n\t\tthis.refs.wrapper.style['backgroundColor'] = 'transparent';\n\t},\n\trender: function render() {\n\t\tvar _this2 = this;\n\n\t\tvar contents = this.state.contents.map(function (c) {\n\t\t\treturn React.createElement(BrowserFolderContentItem, { key: c.id,\n\t\t\t\tcontent: c,\n\t\t\t\tselectedItemId: _this2.props.selectedItemId,\n\t\t\t\tonSelectedItemChanged: _this2.props.onSelectedItemChanged,\n\t\t\t\tonSelectedFolderChanged: _this2.props.onSelectedFolderChanged });\n\t\t});\n\n\t\treturn React.createElement(\n\t\t\t'div',\n\t\t\t{ className: 'browser-contents',\n\t\t\t\tref: 'wrapper',\n\t\t\t\tonDragEnter: this.onDrag,\n\t\t\t\tonDragLeave: this.onDragFinished,\n\t\t\t\tonDragEnd: this.onDragFinished,\n\t\t\t\tonDrop: this.onDragFinished },\n\t\t\tcontents\n\t\t);\n\t}\n});"],"sourceRoot":"/source/"}