{"version":3,"sources":["app/browser-tree-node.js"],"names":["React","folderActions","BrowserTreeNode","createClass","displayName","getDefaultProps","isLast","propTypes","folder","PropTypes","object","isRequired","bool","selectedId","string","_isSelected","this","props","id","_onClick","setSelected","shouldComponentUpdate","nextProps","render","components","children","length","i","n","item","push","createElement","key","classes","className","join","onClick","name"],"mappings":"AAAA,YAEA,IAAIA,OAAQA,MACRC,cAAgBA,cAEhBC,gBAAkBF,MAAMG,aAC3BC,YAAa,kBAEbC,gBAAiB,WAChB,OACCC,QAAQ,IAGVC,WACCC,OAAQR,MAAMS,UAAUC,OAAOC,WAC/BL,OAAQN,MAAMS,UAAUG,KACxBC,WAAYb,MAAMS,UAAUK,OAAOH,YAEpCI,YAAa,WACZ,MAAOC,MAAKC,MAAMT,OAAOU,IAAMF,KAAKC,MAAMJ,YAE3CM,SAAU,WAEJH,KAAKD,eACTd,cAAcmB,YAAYJ,KAAKC,MAAMT,OAAOU,KAG9CG,sBAAuB,SAA+BC,GAErD,MAAON,MAAKC,MAAMJ,YAAcS,EAAUT,YAE3CU,OAAQ,WAEP,GAAIC,MACAC,EAAWT,KAAKC,MAAMT,OAAOiB,QAEjC,IAAIA,GAAYA,EAASC,OAExB,IAAK,GAAIC,GAAI,EAAGC,EAAIH,EAASC,OAAYE,EAAJD,EAAOA,IAAK,CAEhD,GAAIE,GAAOJ,EAASE,EAEpBH,GAAWM,KAAK9B,MAAM+B,cAAc7B,iBAAmB8B,IAAKH,EAAKX,GAChEV,OAAQqB,EACRvB,OAAQqB,GAAKC,EAAI,EACjBf,WAAYG,KAAKC,MAAMJ,cAI1B,GAAIoB,IAAW,YAAajB,KAAKC,MAAMX,OAAS,iBAAmB,GAAIU,KAAKD,cAAgB,qBAAuB,GAAIU,EAASC,OAAS,EAAI,mBAAqB,GAElK,OAAO1B,OAAM+B,cACZ,MACEG,UAAWD,EAAQE,KAAK,MAC1BnC,MAAM+B,cAAc,KAAOG,UAAW,kCACtClC,MAAM+B,cACL,KACEG,UAAW,kBAAmBE,QAASpB,KAAKG,UAC9CnB,MAAM+B,cAAc,KAAOG,UAAW,yCACtClB,KAAKC,MAAMT,OAAO6B,MAEnBrC,MAAM+B,cACL,MACEG,UAAW,kBACbV","file":"app/browser-tree-node.js","sourcesContent":["\"use strict\";\n\nvar React = React;\nvar folderActions = folderActions;\n\nvar BrowserTreeNode = React.createClass({\n\tdisplayName: \"BrowserTreeNode\",\n\n\tgetDefaultProps: function getDefaultProps() {\n\t\treturn {\n\t\t\tisLast: true\n\t\t};\n\t},\n\tpropTypes: {\n\t\tfolder: React.PropTypes.object.isRequired,\n\t\tisLast: React.PropTypes.bool,\n\t\tselectedId: React.PropTypes.string.isRequired\n\t},\n\t_isSelected: function _isSelected() {\n\t\treturn this.props.folder.id == this.props.selectedId;\n\t},\n\t_onClick: function _onClick() {\n\n\t\tif (!this._isSelected()) {\n\t\t\tfolderActions.setSelected(this.props.folder.id);\n\t\t}\n\t},\n\tshouldComponentUpdate: function shouldComponentUpdate(nextProps) {\n\n\t\treturn this.props.selectedId != nextProps.selectedId;\n\t},\n\trender: function render() {\n\n\t\tvar components = [],\n\t\t    children = this.props.folder.children;\n\n\t\tif (children && children.length) {\n\n\t\t\tfor (var i = 0, n = children.length; i < n; i++) {\n\n\t\t\t\tvar item = children[i];\n\n\t\t\t\tcomponents.push(React.createElement(BrowserTreeNode, { key: item.id,\n\t\t\t\t\tfolder: item,\n\t\t\t\t\tisLast: i == n - 1,\n\t\t\t\t\tselectedId: this.props.selectedId }));\n\t\t\t}\n\t\t}\n\n\t\tvar classes = [\"tree-item\", this.props.isLast ? 'tree-item-last' : '', this._isSelected() ? 'tree-item-selected' : '', children.length > 0 ? 'tree-item-opened' : ''];\n\n\t\treturn React.createElement(\n\t\t\t\"li\",\n\t\t\t{ className: classes.join(' ') },\n\t\t\tReact.createElement(\"i\", { className: \"tree-icon tree-item-path-icon\" }),\n\t\t\tReact.createElement(\n\t\t\t\t\"a\",\n\t\t\t\t{ className: \"tree-item-label\", onClick: this._onClick },\n\t\t\t\tReact.createElement(\"i\", { className: \"tree-icon tree-item-icon-open-folder\" }),\n\t\t\t\tthis.props.folder.name\n\t\t\t),\n\t\t\tReact.createElement(\n\t\t\t\t\"ul\",\n\t\t\t\t{ className: \"tree-container\" },\n\t\t\t\tcomponents\n\t\t\t)\n\t\t);\n\t}\n});"],"sourceRoot":"/source/"}