{"version":3,"sources":["app/browser-tree-node.js"],"names":["React","BrowserTreeNode","createClass","displayName","getDefaultProps","isLast","propTypes","folder","PropTypes","object","isRequired","bool","selectedFolder","string","onSelectedChanged","func","isSelected","this","props","path","onClick","render","children","dirs","directories","length","i","n","item","push","createElement","key","id","showClassIsLast","showIsSelected","showHasChildren","className","name"],"mappings":"AAAA,YAEA,IAAIA,OAAQA,MAERC,gBAAkBD,MAAME,aAC3BC,YAAa,kBAEbC,gBAAiB,WAChB,OACCC,QAAQ,IAGVC,WACCC,OAAQP,MAAMQ,UAAUC,OAAOC,WAC/BL,OAAQL,MAAMQ,UAAUG,KACxBC,eAAgBZ,MAAMQ,UAAUK,OAAOH,WACvCI,kBAAmBd,MAAMQ,UAAUO,KAAKL,YAEzCM,WAAY,WACX,MAAOC,MAAKC,MAAMX,OAAOY,MAAQF,KAAKC,MAAMN,gBAE7CQ,QAAS,WAEHH,KAAKD,cACTC,KAAKC,MAAMJ,kBAAkBG,KAAKC,MAAMX,SAG1Cc,OAAQ,WAEP,GAAIC,MACAC,EAAON,KAAKC,MAAMX,OAAOiB,WAE7B,IAAID,GAAQA,EAAKE,OAEhB,IAAK,GAAIC,GAAI,EAAGC,EAAIJ,EAAKE,OAAYE,EAAJD,EAAOA,IAAK,CAE5C,GAAIE,GAAOL,EAAKG,EAEhBJ,GAASO,KAAK7B,MAAM8B,cAAc7B,iBAAmB8B,IAAKH,EAAKI,GAC9DzB,OAAQqB,EACRvB,OAAQqB,GAAKC,EAAI,EACjBf,eAAgBK,KAAKC,MAAMN,eAC3BE,kBAAmBG,KAAKC,MAAMJ,qBAIjC,GAAImB,GAAkBhB,KAAKC,MAAMb,OAAS,kBAAoB,GAC1D6B,EAAiBjB,KAAKD,aAAe,sBAAwB,GAC7DmB,EAAkBZ,EAAKE,OAAS,EAAI,oBAAsB,EAE9D,OAAOzB,OAAM8B,cACZ,MACEM,UAAW,YAAcH,EAAkBC,EAAiBC,GAC9DnC,MAAM8B,cAAc,KAAOM,UAAW,kCACtCpC,MAAM8B,cACL,KACEM,UAAW,kBAAmBhB,QAASH,KAAKG,SAC9CpB,MAAM8B,cAAc,KAAOM,UAAW,yCACtCnB,KAAKC,MAAMX,OAAO8B,MAEnBrC,MAAM8B,cACL,MACEM,UAAW,kBACbd","file":"app/browser-tree-node.js","sourcesContent":["\"use strict\";\n\nvar React = React;\n\nvar BrowserTreeNode = React.createClass({\n\tdisplayName: 'BrowserTreeNode',\n\n\tgetDefaultProps: function getDefaultProps() {\n\t\treturn {\n\t\t\tisLast: true\n\t\t};\n\t},\n\tpropTypes: {\n\t\tfolder: React.PropTypes.object.isRequired,\n\t\tisLast: React.PropTypes.bool,\n\t\tselectedFolder: React.PropTypes.string.isRequired,\n\t\tonSelectedChanged: React.PropTypes.func.isRequired\n\t},\n\tisSelected: function isSelected() {\n\t\treturn this.props.folder.path == this.props.selectedFolder;\n\t},\n\tonClick: function onClick() {\n\n\t\tif (!this.isSelected()) {\n\t\t\tthis.props.onSelectedChanged(this.props.folder);\n\t\t}\n\t},\n\trender: function render() {\n\n\t\tvar children = [],\n\t\t    dirs = this.props.folder.directories;\n\n\t\tif (dirs && dirs.length) {\n\n\t\t\tfor (var i = 0, n = dirs.length; i < n; i++) {\n\n\t\t\t\tvar item = dirs[i];\n\n\t\t\t\tchildren.push(React.createElement(BrowserTreeNode, { key: item.id,\n\t\t\t\t\tfolder: item,\n\t\t\t\t\tisLast: i == n - 1,\n\t\t\t\t\tselectedFolder: this.props.selectedFolder,\n\t\t\t\t\tonSelectedChanged: this.props.onSelectedChanged }));\n\t\t\t}\n\t\t}\n\n\t\tvar showClassIsLast = this.props.isLast ? ' tree-item-last' : '';\n\t\tvar showIsSelected = this.isSelected() ? ' tree-item-selected' : '';\n\t\tvar showHasChildren = dirs.length > 0 ? ' tree-item-opened' : '';\n\n\t\treturn React.createElement(\n\t\t\t'li',\n\t\t\t{ className: \"tree-item\" + showClassIsLast + showIsSelected + showHasChildren },\n\t\t\tReact.createElement('i', { className: 'tree-icon tree-item-path-icon' }),\n\t\t\tReact.createElement(\n\t\t\t\t'a',\n\t\t\t\t{ className: 'tree-item-label', onClick: this.onClick },\n\t\t\t\tReact.createElement('i', { className: 'tree-icon tree-item-icon-open-folder' }),\n\t\t\t\tthis.props.folder.name\n\t\t\t),\n\t\t\tReact.createElement(\n\t\t\t\t'ul',\n\t\t\t\t{ className: 'tree-container' },\n\t\t\t\tchildren\n\t\t\t)\n\t\t);\n\t}\n});"],"sourceRoot":"/source/"}