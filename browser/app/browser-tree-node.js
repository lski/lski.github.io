"use strict";var React=React,folderActions=folderActions,BrowserTreeNode=React.createClass({displayName:"BrowserTreeNode",getDefaultProps:function(){return{isLast:!0}},propTypes:{folder:React.PropTypes.object.isRequired,isLast:React.PropTypes.bool,selectedId:React.PropTypes.string.isRequired},_isSelected:function(){return this.props.folder.id==this.props.selectedId},_onClick:function(){this._isSelected()||folderActions.setSelected(this.props.folder.id)},shouldComponentUpdate:function(e){return this.props.selectedId!=e.selectedId},render:function(){var e=[],t=this.props.folder.children;if(t&&t.length)for(var r=0,s=t.length;s>r;r++){var i=t[r];e.push(React.createElement(BrowserTreeNode,{key:i.id,folder:i,isLast:r==s-1,selectedId:this.props.selectedId}))}var o=["tree-item",this.props.isLast?"tree-item-last":"",this._isSelected()?"tree-item-selected":"",t.length>0?"tree-item-opened":""];return React.createElement("li",{className:o.join(" ")},React.createElement("i",{className:"tree-icon tree-item-path-icon"}),React.createElement("a",{className:"tree-item-label",onClick:this._onClick},React.createElement("i",{className:"tree-icon tree-item-icon-open-folder"}),this.props.folder.name),React.createElement("ul",{className:"tree-container"},e))}});
//# sourceMappingURL=../maps/app/browser-tree-node.js.map
